defmodule SsTest.Elements.Grapheme do
  # This turns this module into a resource
  # , data_layer: Ash.DataLayer.Ets
  use Ash.Resource, domain: SsTest.SoundSpelling, data_layer: Ash.DataLayer.Ets

  actions do
    # Use the default implementation of the :read action
    defaults [:read]

    # and a create action, which we'll customize later
    create :create do
      accept [:spelling]
    end

    create :create_with_sound do
      accept [:spelling]

      argument :phoneme, {:array, :uuid} do
        allow_nil? false
      end
    end

    update :update do
      require_atomic? false

      argument :phoneme, {:array, :uuid} do
        allow_nil? false
      end

      change manage_relationship(:phoneme, type: :append_and_remove)
    end
  end

  # Attributes are the simple pieces of data that exist on your resource
  attributes do
    # Add an autogenerated UUID primary key called `:id`.
    uuid_primary_key :id

    attribute :spelling, :string do
      allow_nil? false
      public? true
    end
  end

  relationships do
    many_to_many :phoneme, SsTest.Elements.Phoneme do
      through SsTest.Concepts.ReadSound
      source_attribute_on_join_resource :grapheme_id
      destination_attribute_on_join_resource :phoneme_id
      public? true
    end
  end

  # code_interface do
  #   # define_for(SsTest.Elements)
  #   define :create
  #   define :read
  #   define :by_id, get_by: [:id], action: :read
  #   define :by_name, get_by: [:spelling], action: :read
  # end
end
