defmodule SsTest.Elements.Phoneme do
  # This turns this module into a resource
  # , data_layer: Ash.DataLayer.Ets
  use Ash.Resource, domain: SsTest.SoundSpelling, data_layer: Ash.DataLayer.Ets

  actions do
    # Use the default implementation of the :read action
    defaults [:read]

    # and a create action, which we'll customize later
    # create :create do
    #   accept [:sound]
    # end

    create :create do
      # primary? true
      accept [:sound]
      # argument :spelling, {:array, :map}

      # change manage_relationship(:spelling,
      #          type: :append_and_remove,
      #          on_no_match: :create
      #        )
    end
  end

  # Attributes are the simple pieces of data that exist on your resource
  attributes do
    # Add an autogenerated UUID primary key called `:id`.
    uuid_primary_key :id

    # Add a string type attribute called `:subject`
    attribute :sound, :string do
      allow_nil? false
      public? true
    end
  end

  relationships do
    many_to_many :grapheme, SsTest.Elements.Grapheme do
      through SsTest.Concepts.ReadSound
      source_attribute_on_join_resource :phoneme_id
      destination_attribute_on_join_resource :grapheme_id
      public? true
    end
  end

  code_interface do
    # define_for(SsTest.Elements)
    define :create
    define :read
    define :by_id, get_by: [:id], action: :read
    define :by_name, get_by: [:sound], action: :read
  end
end
